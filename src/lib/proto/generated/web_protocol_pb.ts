// @generated by protoc-gen-es v2.2.5 with parameter "target=ts"
// @generated from file web_protocol.proto (package ws_protocol, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file web_protocol.proto.
 */
export const file_web_protocol: GenFile = /*@__PURE__*/
  fileDesc("ChJ3ZWJfcHJvdG9jb2wucHJvdG8SC3dzX3Byb3RvY29sIj0KCVdzV2luc2l6ZRIJCgF4GAEgASgFEgkKAXkYAiABKAUSDAoEcm93cxgDIAEoBRIMCgRjb2xzGAQgASgFImsKBldzVXNlchIMCgRuYW1lGAEgASgJEioKBmN1cnNvchgCIAEoCzIVLndzX3Byb3RvY29sLldzQ3Vyc29ySACIAQESEgoFZm9jdXMYAyABKAVIAYgBAUIJCgdfY3Vyc29yQggKBl9mb2N1cyIgCghXc0N1cnNvchIJCgF4GAEgASgFEgkKAXkYAiABKAUiqQgKCFdzU2VydmVyEiwKBWhlbGxvGAEgASgLMhsud3NfcHJvdG9jb2wuV3NTZXJ2ZXIuSGVsbG9IABIsCgV1c2VycxgCIAEoCzIbLndzX3Byb3RvY29sLldzU2VydmVyLlVzZXJzSAASMwoJdXNlcl9kaWZmGAMgASgLMh4ud3NfcHJvdG9jb2wuV3NTZXJ2ZXIuVXNlckRpZmZIABIuCgZzaGVsbHMYBCABKAsyHC53c19wcm90b2NvbC5Xc1NlcnZlci5TaGVsbHNIABIuCgZjaHVua3MYBSABKAsyHC53c19wcm90b2NvbC5Xc1NlcnZlci5DaHVua3NIABI7Cg1zaGVsbF9sYXRlbmN5GAYgASgLMiIud3NfcHJvdG9jb2wuV3NTZXJ2ZXIuU2hlbGxMYXRlbmN5SAASKgoEcG9uZxgHIAEoCzIaLndzX3Byb3RvY29sLldzU2VydmVyLlBvbmdIABIsCgVlcnJvchgIIAEoCzIbLndzX3Byb3RvY29sLldzU2VydmVyLkVycm9ySAAaKgoFSGVsbG8SDwoHdXNlcl9pZBgBIAEoBRIQCghtZXRhZGF0YRgCIAEoCRqBAQoFVXNlcnMSNQoFdXNlcnMYASADKAsyJi53c19wcm90b2NvbC5Xc1NlcnZlci5Vc2Vycy5Vc2Vyc0VudHJ5GkEKClVzZXJzRW50cnkSCwoDa2V5GAEgASgFEiIKBXZhbHVlGAIgASgLMhMud3NfcHJvdG9jb2wuV3NVc2VyOgI4ARq6AQoIVXNlckRpZmYSDwoHdXNlcl9pZBgBIAEoBRIhCgR1c2VyGAIgASgLMhMud3NfcHJvdG9jb2wuV3NVc2VyEj4KBmFjdGlvbhgDIAEoDjIpLndzX3Byb3RvY29sLldzU2VydmVyLlVzZXJEaWZmLkFjdGlvblR5cGVIAIgBASIvCgpBY3Rpb25UeXBlEgoKBkpPSU5FRBAAEggKBExFRlQQARILCgdDSEFOR0VEEAJCCQoHX2FjdGlvbhqJAQoGU2hlbGxzEjgKBnNoZWxscxgBIAMoCzIoLndzX3Byb3RvY29sLldzU2VydmVyLlNoZWxscy5TaGVsbHNFbnRyeRpFCgtTaGVsbHNFbnRyeRILCgNrZXkYASABKAUSJQoFdmFsdWUYAiABKAsyFi53c19wcm90b2NvbC5Xc1dpbnNpemU6AjgBGjQKBkNodW5rcxILCgNzaWQYASABKAUSDQoFaW5kZXgYAiABKAUSDgoGY2h1bmtzGAMgAygMGh8KDFNoZWxsTGF0ZW5jeRIPCgdsYXRlbmN5GAEgASgFGhkKBFBvbmcSEQoJdGltZXN0YW1wGAEgASgDGhgKBUVycm9yEg8KB21lc3NhZ2UYASABKAlCEAoOc2VydmVyX21lc3NhZ2UiuQcKCFdzQ2xpZW50EjEKCHNldF9uYW1lGAEgASgLMh0ud3NfcHJvdG9jb2wuV3NDbGllbnQuU2V0TmFtZUgAEjUKCnNldF9jdXJzb3IYAiABKAsyHy53c19wcm90b2NvbC5Xc0NsaWVudC5TZXRDdXJzb3JIABIzCglzZXRfZm9jdXMYAyABKAsyHi53c19wcm90b2NvbC5Xc0NsaWVudC5TZXRGb2N1c0gAEi4KBmNyZWF0ZRgEIAEoCzIcLndzX3Byb3RvY29sLldzQ2xpZW50LkNyZWF0ZUgAEiwKBWNsb3NlGAUgASgLMhsud3NfcHJvdG9jb2wuV3NDbGllbnQuQ2xvc2VIABIqCgRtb3ZlGAYgASgLMhoud3NfcHJvdG9jb2wuV3NDbGllbnQuTW92ZUgAEioKBGRhdGEYByABKAsyGi53c19wcm90b2NvbC5Xc0NsaWVudC5EYXRhSAASNAoJc3Vic2NyaWJlGAggASgLMh8ud3NfcHJvdG9jb2wuV3NDbGllbnQuU3Vic2NyaWJlSAASKgoEcGluZxgJIAEoCzIaLndzX3Byb3RvY29sLldzQ2xpZW50LlBpbmdIABJAChBzZXJ2ZXJfcmVzX2hlbGxvGAogASgLMiQud3NfcHJvdG9jb2wuV3NDbGllbnQuU2VydmVyUmVzSGVsbG9IABoXCgdTZXROYW1lEgwKBG5hbWUYASABKAkaMgoJU2V0Q3Vyc29yEiUKBmN1cnNvchgBIAEoCzIVLndzX3Byb3RvY29sLldzQ3Vyc29yGhwKCFNldEZvY3VzEhAKCHNoZWxsX2lkGAEgASgFGjIKBkNyZWF0ZRIJCgF4GAEgASgFEgkKAXkYAiABKAUSEgoKc2hlbGxfaW5mbxgDIAEoCRoWCgVDbG9zZRINCgVzaGVsbBgBIAEoBRpJCgRNb3ZlEg0KBXNoZWxsGAEgASgFEikKBHNpemUYAiABKAsyFi53c19wcm90b2NvbC5Xc1dpbnNpemVIAIgBAUIHCgVfc2l6ZRozCgREYXRhEg0KBXNoZWxsGAEgASgFEgwKBGRhdGEYAiABKAwSDgoGb2Zmc2V0GAMgASgFGi0KCVN1YnNjcmliZRINCgVzaGVsbBgBIAEoBRIRCgljaHVua19udW0YAiABKAUaGQoEUGluZxIRCgl0aW1lc3RhbXAYASABKAMaIQoOU2VydmVyUmVzSGVsbG8SDwoHdXNlcl9pZBgBIAEoBUIQCg5jbGllbnRfbWVzc2FnZWIGcHJvdG8z");

/**
 * Real-time window size update.
 *
 * @generated from message ws_protocol.WsWinsize
 */
export type WsWinsize = Message<"ws_protocol.WsWinsize"> & {
  /**
   * The top-left x-coordinate of the shell window, offset from the origin
   *
   * @generated from field: int32 x = 1;
   */
  x: number;

  /**
   * The top-left y-coordinate of the shell window, offset from the origin
   *
   * @generated from field: int32 y = 2;
   */
  y: number;

  /**
   * The number of rows in the shell window
   *
   * @generated from field: int32 rows = 3;
   */
  rows: number;

  /**
   * The number of columns in the shell window
   *
   * @generated from field: int32 cols = 4;
   */
  cols: number;
};

/**
 * Describes the message ws_protocol.WsWinsize.
 * Use `create(WsWinsizeSchema)` to create a new message.
 */
export const WsWinsizeSchema: GenMessage<WsWinsize> = /*@__PURE__*/
  messageDesc(file_web_protocol, 0);

/**
 * Real-time message providing information about a user
 *
 * @generated from message ws_protocol.WsUser
 */
export type WsUser = Message<"ws_protocol.WsUser"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: optional ws_protocol.WsCursor cursor = 2;
   */
  cursor?: WsCursor;

  /**
   *  libs.Sid  Unique identifier for a shell within the session.
   *
   * @generated from field: optional int32 focus = 3;
   */
  focus?: number;
};

/**
 * Describes the message ws_protocol.WsUser.
 * Use `create(WsUserSchema)` to create a new message.
 */
export const WsUserSchema: GenMessage<WsUser> = /*@__PURE__*/
  messageDesc(file_web_protocol, 1);

/**
 * A tuple representing the cursor position.
 *
 * @generated from message ws_protocol.WsCursor
 */
export type WsCursor = Message<"ws_protocol.WsCursor"> & {
  /**
   * @generated from field: int32 x = 1;
   */
  x: number;

  /**
   * @generated from field: int32 y = 2;
   */
  y: number;
};

/**
 * Describes the message ws_protocol.WsCursor.
 * Use `create(WsCursorSchema)` to create a new message.
 */
export const WsCursorSchema: GenMessage<WsCursor> = /*@__PURE__*/
  messageDesc(file_web_protocol, 2);

/**
 * A real-time message sent from the server over WebSocket.
 *
 * @generated from message ws_protocol.WsServer
 */
export type WsServer = Message<"ws_protocol.WsServer"> & {
  /**
   * @generated from oneof ws_protocol.WsServer.server_message
   */
  serverMessage: {
    /**
     * @generated from field: ws_protocol.WsServer.Hello hello = 1;
     */
    value: WsServer_Hello;
    case: "hello";
  } | {
    /**
     * @generated from field: ws_protocol.WsServer.Users users = 2;
     */
    value: WsServer_Users;
    case: "users";
  } | {
    /**
     * @generated from field: ws_protocol.WsServer.UserDiff user_diff = 3;
     */
    value: WsServer_UserDiff;
    case: "userDiff";
  } | {
    /**
     * @generated from field: ws_protocol.WsServer.Shells shells = 4;
     */
    value: WsServer_Shells;
    case: "shells";
  } | {
    /**
     * @generated from field: ws_protocol.WsServer.Chunks chunks = 5;
     */
    value: WsServer_Chunks;
    case: "chunks";
  } | {
    /**
     * @generated from field: ws_protocol.WsServer.ShellLatency shell_latency = 6;
     */
    value: WsServer_ShellLatency;
    case: "shellLatency";
  } | {
    /**
     * @generated from field: ws_protocol.WsServer.Pong pong = 7;
     */
    value: WsServer_Pong;
    case: "pong";
  } | {
    /**
     * @generated from field: ws_protocol.WsServer.Error error = 8;
     */
    value: WsServer_Error;
    case: "error";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message ws_protocol.WsServer.
 * Use `create(WsServerSchema)` to create a new message.
 */
export const WsServerSchema: GenMessage<WsServer> = /*@__PURE__*/
  messageDesc(file_web_protocol, 3);

/**
 * Initial server message, with the user's ID and session metadata.
 *
 * @generated from message ws_protocol.WsServer.Hello
 */
export type WsServer_Hello = Message<"ws_protocol.WsServer.Hello"> & {
  /**
   * Unique identifier for a user within the session.
   *
   * @generated from field: int32 user_id = 1;
   */
  userId: number;

  /**
   * @generated from field: string metadata = 2;
   */
  metadata: string;
};

/**
 * Describes the message ws_protocol.WsServer.Hello.
 * Use `create(WsServer_HelloSchema)` to create a new message.
 */
export const WsServer_HelloSchema: GenMessage<WsServer_Hello> = /*@__PURE__*/
  messageDesc(file_web_protocol, 3, 0);

/**
 * A snapshot of all current users in the session.
 *
 * @generated from message ws_protocol.WsServer.Users
 */
export type WsServer_Users = Message<"ws_protocol.WsServer.Users"> & {
  /**
   * keys is unique identifier for a user within the session.
   *
   * @generated from field: map<int32, ws_protocol.WsUser> users = 1;
   */
  users: { [key: number]: WsUser };
};

/**
 * Describes the message ws_protocol.WsServer.Users.
 * Use `create(WsServer_UsersSchema)` to create a new message.
 */
export const WsServer_UsersSchema: GenMessage<WsServer_Users> = /*@__PURE__*/
  messageDesc(file_web_protocol, 3, 1);

/**
 * Info about a single user in the session: joined, left, or changed
 *
 * @generated from message ws_protocol.WsServer.UserDiff
 */
export type WsServer_UserDiff = Message<"ws_protocol.WsServer.UserDiff"> & {
  /**
   * Uid
   *
   * @generated from field: int32 user_id = 1;
   */
  userId: number;

  /**
   * @generated from field: ws_protocol.WsUser user = 2;
   */
  user?: WsUser;

  /**
   * @generated from field: optional ws_protocol.WsServer.UserDiff.ActionType action = 3;
   */
  action?: WsServer_UserDiff_ActionType;
};

/**
 * Describes the message ws_protocol.WsServer.UserDiff.
 * Use `create(WsServer_UserDiffSchema)` to create a new message.
 */
export const WsServer_UserDiffSchema: GenMessage<WsServer_UserDiff> = /*@__PURE__*/
  messageDesc(file_web_protocol, 3, 2);

/**
 * @generated from enum ws_protocol.WsServer.UserDiff.ActionType
 */
export enum WsServer_UserDiff_ActionType {
  /**
   * @generated from enum value: JOINED = 0;
   */
  JOINED = 0,

  /**
   * @generated from enum value: LEFT = 1;
   */
  LEFT = 1,

  /**
   * @generated from enum value: CHANGED = 2;
   */
  CHANGED = 2,
}

/**
 * Describes the enum ws_protocol.WsServer.UserDiff.ActionType.
 */
export const WsServer_UserDiff_ActionTypeSchema: GenEnum<WsServer_UserDiff_ActionType> = /*@__PURE__*/
  enumDesc(file_web_protocol, 3, 2, 0);

/**
 * Notification when the set of open shells has changed
 *
 * @generated from message ws_protocol.WsServer.Shells
 */
export type WsServer_Shells = Message<"ws_protocol.WsServer.Shells"> & {
  /**
   * keys is unique identifier for a shell within the session.
   *
   * @generated from field: map<int32, ws_protocol.WsWinsize> shells = 1;
   */
  shells: { [key: number]: WsWinsize };
};

/**
 * Describes the message ws_protocol.WsServer.Shells.
 * Use `create(WsServer_ShellsSchema)` to create a new message.
 */
export const WsServer_ShellsSchema: GenMessage<WsServer_Shells> = /*@__PURE__*/
  messageDesc(file_web_protocol, 3, 3);

/**
 * Subscription results, in the form of terminal data chunks.
 *
 * @generated from message ws_protocol.WsServer.Chunks
 */
export type WsServer_Chunks = Message<"ws_protocol.WsServer.Chunks"> & {
  /**
   * @generated from field: int32 sid = 1;
   */
  sid: number;

  /**
   * @generated from field: int32 index = 2;
   */
  index: number;

  /**
   * @generated from field: repeated bytes chunks = 3;
   */
  chunks: Uint8Array[];
};

/**
 * Describes the message ws_protocol.WsServer.Chunks.
 * Use `create(WsServer_ChunksSchema)` to create a new message.
 */
export const WsServer_ChunksSchema: GenMessage<WsServer_Chunks> = /*@__PURE__*/
  messageDesc(file_web_protocol, 3, 4);

/**
 * Forward a latency measurement between the server and backend shell.
 *
 * @generated from message ws_protocol.WsServer.ShellLatency
 */
export type WsServer_ShellLatency = Message<"ws_protocol.WsServer.ShellLatency"> & {
  /**
   * @generated from field: int32 latency = 1;
   */
  latency: number;
};

/**
 * Describes the message ws_protocol.WsServer.ShellLatency.
 * Use `create(WsServer_ShellLatencySchema)` to create a new message.
 */
export const WsServer_ShellLatencySchema: GenMessage<WsServer_ShellLatency> = /*@__PURE__*/
  messageDesc(file_web_protocol, 3, 5);

/**
 * Echo back a timestamp, for the client's own latency measurement.
 *
 * @generated from message ws_protocol.WsServer.Pong
 */
export type WsServer_Pong = Message<"ws_protocol.WsServer.Pong"> & {
  /**
   * @generated from field: int64 timestamp = 1;
   */
  timestamp: bigint;
};

/**
 * Describes the message ws_protocol.WsServer.Pong.
 * Use `create(WsServer_PongSchema)` to create a new message.
 */
export const WsServer_PongSchema: GenMessage<WsServer_Pong> = /*@__PURE__*/
  messageDesc(file_web_protocol, 3, 6);

/**
 * Alert the client of an application error.
 *
 * @generated from message ws_protocol.WsServer.Error
 */
export type WsServer_Error = Message<"ws_protocol.WsServer.Error"> & {
  /**
   * @generated from field: string message = 1;
   */
  message: string;
};

/**
 * Describes the message ws_protocol.WsServer.Error.
 * Use `create(WsServer_ErrorSchema)` to create a new message.
 */
export const WsServer_ErrorSchema: GenMessage<WsServer_Error> = /*@__PURE__*/
  messageDesc(file_web_protocol, 3, 7);

/**
 * @generated from message ws_protocol.WsClient
 */
export type WsClient = Message<"ws_protocol.WsClient"> & {
  /**
   * @generated from oneof ws_protocol.WsClient.client_message
   */
  clientMessage: {
    /**
     * @generated from field: ws_protocol.WsClient.SetName set_name = 1;
     */
    value: WsClient_SetName;
    case: "setName";
  } | {
    /**
     * @generated from field: ws_protocol.WsClient.SetCursor set_cursor = 2;
     */
    value: WsClient_SetCursor;
    case: "setCursor";
  } | {
    /**
     * @generated from field: ws_protocol.WsClient.SetFocus set_focus = 3;
     */
    value: WsClient_SetFocus;
    case: "setFocus";
  } | {
    /**
     * @generated from field: ws_protocol.WsClient.Create create = 4;
     */
    value: WsClient_Create;
    case: "create";
  } | {
    /**
     * @generated from field: ws_protocol.WsClient.Close close = 5;
     */
    value: WsClient_Close;
    case: "close";
  } | {
    /**
     * @generated from field: ws_protocol.WsClient.Move move = 6;
     */
    value: WsClient_Move;
    case: "move";
  } | {
    /**
     * @generated from field: ws_protocol.WsClient.Data data = 7;
     */
    value: WsClient_Data;
    case: "data";
  } | {
    /**
     * @generated from field: ws_protocol.WsClient.Subscribe subscribe = 8;
     */
    value: WsClient_Subscribe;
    case: "subscribe";
  } | {
    /**
     * @generated from field: ws_protocol.WsClient.Ping ping = 9;
     */
    value: WsClient_Ping;
    case: "ping";
  } | {
    /**
     * @generated from field: ws_protocol.WsClient.ServerResHello server_res_hello = 10;
     */
    value: WsClient_ServerResHello;
    case: "serverResHello";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message ws_protocol.WsClient.
 * Use `create(WsClientSchema)` to create a new message.
 */
export const WsClientSchema: GenMessage<WsClient> = /*@__PURE__*/
  messageDesc(file_web_protocol, 4);

/**
 * Set the name of the current user
 *
 * @generated from message ws_protocol.WsClient.SetName
 */
export type WsClient_SetName = Message<"ws_protocol.WsClient.SetName"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message ws_protocol.WsClient.SetName.
 * Use `create(WsClient_SetNameSchema)` to create a new message.
 */
export const WsClient_SetNameSchema: GenMessage<WsClient_SetName> = /*@__PURE__*/
  messageDesc(file_web_protocol, 4, 0);

/**
 * Send real-time information about the user's cursor
 *
 * @generated from message ws_protocol.WsClient.SetCursor
 */
export type WsClient_SetCursor = Message<"ws_protocol.WsClient.SetCursor"> & {
  /**
   * @generated from field: ws_protocol.WsCursor cursor = 1;
   */
  cursor?: WsCursor;
};

/**
 * Describes the message ws_protocol.WsClient.SetCursor.
 * Use `create(WsClient_SetCursorSchema)` to create a new message.
 */
export const WsClient_SetCursorSchema: GenMessage<WsClient_SetCursor> = /*@__PURE__*/
  messageDesc(file_web_protocol, 4, 1);

/**
 * @generated from message ws_protocol.WsClient.SetFocus
 */
export type WsClient_SetFocus = Message<"ws_protocol.WsClient.SetFocus"> & {
  /**
   * Unique identifier for a shell within the session.
   *
   * @generated from field: int32 shell_id = 1;
   */
  shellId: number;
};

/**
 * Describes the message ws_protocol.WsClient.SetFocus.
 * Use `create(WsClient_SetFocusSchema)` to create a new message.
 */
export const WsClient_SetFocusSchema: GenMessage<WsClient_SetFocus> = /*@__PURE__*/
  messageDesc(file_web_protocol, 4, 2);

/**
 * Create a new shell
 *
 * @generated from message ws_protocol.WsClient.Create
 */
export type WsClient_Create = Message<"ws_protocol.WsClient.Create"> & {
  /**
   * @generated from field: int32 x = 1;
   */
  x: number;

  /**
   * @generated from field: int32 y = 2;
   */
  y: number;

  /**
   * Information about the shell, ex: {shell_name};{shell_path}
   *
   * @generated from field: string shell_info = 3;
   */
  shellInfo: string;
};

/**
 * Describes the message ws_protocol.WsClient.Create.
 * Use `create(WsClient_CreateSchema)` to create a new message.
 */
export const WsClient_CreateSchema: GenMessage<WsClient_Create> = /*@__PURE__*/
  messageDesc(file_web_protocol, 4, 3);

/**
 * Close a specific shell
 *
 * @generated from message ws_protocol.WsClient.Close
 */
export type WsClient_Close = Message<"ws_protocol.WsClient.Close"> & {
  /**
   * Unique identifier for a shell within the session.
   *
   * @generated from field: int32 shell = 1;
   */
  shell: number;
};

/**
 * Describes the message ws_protocol.WsClient.Close.
 * Use `create(WsClient_CloseSchema)` to create a new message.
 */
export const WsClient_CloseSchema: GenMessage<WsClient_Close> = /*@__PURE__*/
  messageDesc(file_web_protocol, 4, 4);

/**
 * Move a shell window to a new position and focus it
 *
 * @generated from message ws_protocol.WsClient.Move
 */
export type WsClient_Move = Message<"ws_protocol.WsClient.Move"> & {
  /**
   * Unique identifier for a shell within the session.
   *
   * @generated from field: int32 shell = 1;
   */
  shell: number;

  /**
   * @generated from field: optional ws_protocol.WsWinsize size = 2;
   */
  size?: WsWinsize;
};

/**
 * Describes the message ws_protocol.WsClient.Move.
 * Use `create(WsClient_MoveSchema)` to create a new message.
 */
export const WsClient_MoveSchema: GenMessage<WsClient_Move> = /*@__PURE__*/
  messageDesc(file_web_protocol, 4, 5);

/**
 * Add user data to a given shell
 *
 * @generated from message ws_protocol.WsClient.Data
 */
export type WsClient_Data = Message<"ws_protocol.WsClient.Data"> & {
  /**
   * Unique identifier for a shell within the session.
   *
   * @generated from field: int32 shell = 1;
   */
  shell: number;

  /**
   * Data received from the shell
   *
   * @generated from field: bytes data = 2;
   */
  data: Uint8Array;

  /**
   * Offset from the beginning of the shell's data stream
   *
   * @generated from field: int32 offset = 3;
   */
  offset: number;
};

/**
 * Describes the message ws_protocol.WsClient.Data.
 * Use `create(WsClient_DataSchema)` to create a new message.
 */
export const WsClient_DataSchema: GenMessage<WsClient_Data> = /*@__PURE__*/
  messageDesc(file_web_protocol, 4, 6);

/**
 * Subscribe to a shell, starting at a given chunk index
 *
 * @generated from message ws_protocol.WsClient.Subscribe
 */
export type WsClient_Subscribe = Message<"ws_protocol.WsClient.Subscribe"> & {
  /**
   * Unique identifier for a shell within the session.
   *
   * @generated from field: int32 shell = 1;
   */
  shell: number;

  /**
   * @generated from field: int32 chunk_num = 2;
   */
  chunkNum: number;
};

/**
 * Describes the message ws_protocol.WsClient.Subscribe.
 * Use `create(WsClient_SubscribeSchema)` to create a new message.
 */
export const WsClient_SubscribeSchema: GenMessage<WsClient_Subscribe> = /*@__PURE__*/
  messageDesc(file_web_protocol, 4, 7);

/**
 * Send a ping to the server, for latency measurement
 *
 * @generated from message ws_protocol.WsClient.Ping
 */
export type WsClient_Ping = Message<"ws_protocol.WsClient.Ping"> & {
  /**
   * @generated from field: int64 timestamp = 1;
   */
  timestamp: bigint;
};

/**
 * Describes the message ws_protocol.WsClient.Ping.
 * Use `create(WsClient_PingSchema)` to create a new message.
 */
export const WsClient_PingSchema: GenMessage<WsClient_Ping> = /*@__PURE__*/
  messageDesc(file_web_protocol, 4, 8);

/**
 * Response from server message, after sending the initial hello message
 *
 * @generated from message ws_protocol.WsClient.ServerResHello
 */
export type WsClient_ServerResHello = Message<"ws_protocol.WsClient.ServerResHello"> & {
  /**
   * Unique identifier for a user within the session
   *
   * @generated from field: int32 user_id = 1;
   */
  userId: number;
};

/**
 * Describes the message ws_protocol.WsClient.ServerResHello.
 * Use `create(WsClient_ServerResHelloSchema)` to create a new message.
 */
export const WsClient_ServerResHelloSchema: GenMessage<WsClient_ServerResHello> = /*@__PURE__*/
  messageDesc(file_web_protocol, 4, 9);

